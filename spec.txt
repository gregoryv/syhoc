      Identify requirements within plain-text specifications

Status of This Memo

This document is not an Internet Standards Track specification; it is
published for examination, experimental implementation, and
evaluation.

Abstract

Plain-text specifications are readable and many follow [RFC 2119]
when phrasing requirements.  This specification introduces a syntax
to augment such requirements with identifiers for easy reference.

ยง1 Introduction

Being able to reference a requirement within a large document aids
many stakeholders within projects.  Author and reviewer while the
specification is being written and discussed.  The developer during
implementation and testing.  Customer while accepting the final
product.

A test suite could e.g. use the wording of a requirement verbatim if
it fails, by parsing the referenced requirement.  Having a way to
easily index all requirements and reference them elsewhere keeps the
requirements at it's source.

ยง1.2 Requirements

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in [RFC 2119].

ยง2 Requirement Identifier Syntax

Requirement identifiers SHOULD(R1) be written within parenthesis and
start with 'R' followed by a number.  Requirement identifiers
MUST(R2) be unique within one specification.  Requirement identifiers
MUST(R3) be placed directly after one of the keywords as defined by
[RFC 2119].

Example;

    "... MUST NOT(R1) .." ok
    "... SHOULD ..."      missing identifier
    "... MAY (R1) ..."    error spacing after keyword
    "... SHOULD\nNOT(R1)" ok when keyword split over two lines


<!-- links are excluded from final output -->

[example.com]: https://example.com
[RFC 2119]: https://www.ietf.org/rfc/rfc2119
[specification text processor (stp)]: https://github.com/gregoryv/stp
[source of this document]: https://gregoryv.github.io/syhoc/spec.txt
[gregoryv/syhoc]: https://github.com/gregoryv/syhoc















































